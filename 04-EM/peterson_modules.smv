MODULE main

VAR
  turn : 0..1;
  p0 : proc(0,p1,self);
  p1 : proc(1,p0,self);

IVAR
  running : 0..1;

ASSIGN
  next(turn) := case running=0 & p0.pc=want : 1;
                     running=1 & p1.pc=want : 0;
                     TRUE : turn;
                esac;
LTLSPEC G !(p0.pc=critical & p1.pc=critical)
LTLSPEC G (p0.pc=want -> F p0.pc=critical)
LTLSPEC G (p1.pc=want -> F p1.pc=critical)
JUSTICE running=0
JUSTICE running=1

MODULE proc(id,other,main)
VAR
  flag : boolean;
  pc : {idle,want,wait,critical};
ASSIGN
  init(flag) := FALSE;
  init(pc) := idle;
  next(flag) := case main.running=id & pc=idle : TRUE;
                     main.running=id & pc=critical : FALSE;
                     TRUE : flag;
                esac;
  next(pc) := case main.running=id & pc=idle : want;
                   main.running=id & pc=want : wait;
                   main.running=id & pc=wait & !(other.flag & main.turn!=id) : critical;
                   main.running=id & pc=critical : idle;
                   TRUE : pc;
              esac;

MODULE main

VAR
    farmer : boolean;
    fox : boolean;
    goose : boolean;
    beans : boolean;

IVAR
    thing : {nothing, f, g, b};

ASSIGN
    init(farmer) := FALSE;
    init(fox) := FALSE;
    init(goose) := FALSE;
    init(beans) := FALSE;

    next(farmer) := !farmer;
    next(fox) := thing = f ? !fox : fox;
    next(goose) := thing = g ? !goose : goose;
    next(beans) := thing = b ? !beans : beans;

TRANS
    thing = f -> farmer = fox
TRANS
    thing = g -> farmer = goose
TRANS
    thing = b -> farmer = beans

DEFINE
    safe := (fox = goose -> fox = farmer) & (goose = beans -> beans = farmer);

INVAR
    safe

CTLSPEC
    AG !(farmer & fox & goose & beans)
